#version 330 core
 
layout(triangles) in;
layout(triangle_strip, max_vertices = 60000) out;

in vec2 UVg[];
in vec4 normalg[];

out vec2 UV;
out vec3 normal;
out vec4 position;

uniform mat4 MVP;
uniform mat4 MV;
uniform mat4 Proj;
uniform mat4 View;
uniform float atmosphereThickness = 0.1;

void main() {

	mat4 normalMatrix = transpose(inverse(MV));

	UV = UVg[0];
	normal = -normalg[0].xyz;
	gl_Position = MVP * gl_in[0].gl_Position + Proj * View * vec4(normalize((normalMatrix * normalg[0]).xyz), 0) * atmosphereThickness;
	position = gl_Position;
    EmitVertex();
	
	UV = UVg[2];
	normal = -normalg[2].xyz;
    gl_Position = MVP * gl_in[2].gl_Position + Proj * View * vec4(normalize((normalMatrix * normalg[2]).xyz), 0) * atmosphereThickness;
	position = gl_Position;
    EmitVertex();
	
	UV = UVg[1];
	normal = -normalg[1].xyz;
	gl_Position = MVP * gl_in[1].gl_Position + Proj * View * vec4(normalize((normalMatrix * normalg[1]).xyz), 0) * atmosphereThickness;
	position = gl_Position;
    EmitVertex();

    EndPrimitive();
}